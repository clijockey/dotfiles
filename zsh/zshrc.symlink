# Rob Edwards @clijockey .zshrc file - https://github.com/clijockey/dotfiles

# I use oh-my-zsh - Path to installation.
export ZSH=$HOME/.oh-my-zsh

# Set name of the theme to load.
# Look in ~/.oh-my-zsh/themes/
# Optionally, if you set this to "random", it'll load a random theme each
# time that oh-my-zsh is loaded.


#Testing for new ones

#ZSH_THEME="clijockey"
#ZSH_THEME="nanotech"
ZSH_THEME="spaceship"
#ZSH_THEME="pygmalion"

# Old themes playd with.
#ZSH_THEME="robbyrussell"
#ZSH_THEME="seeker"
#ZSH_THEME="seeker"
##ZSH_THEME="Honukai"
#ZSH_THEME="nanotech" # most recent

# Uncomment the following line to use case-sensitive completion.
# CASE_SENSITIVE="true"

# Uncomment the following line to disable bi-weekly auto-update checks.
# DISABLE_AUTO_UPDATE="true"

# Uncomment the following line to change how often to auto-update (in days).
export UPDATE_ZSH_DAYS=7

# Uncomment the following line to disable colors in ls.
# DISABLE_LS_COLORS="true"

# Uncomment the following line to disable auto-setting terminal title.
# DISABLE_AUTO_TITLE="true"

# Uncomment the following line to enable command auto-correction.
ENABLE_CORRECTION="true"

# Uncomment the following line to display red dots whilst waiting for completion.
COMPLETION_WAITING_DOTS="true"

# Uncomment the following line if you want to disable marking untracked files
# under VCS as dirty. This makes repository status check for large repositories
# much, much faster.
DISABLE_UNTRACKED_FILES_DIRTY="true"

# Uncomment the following line if you want to change the command execution time
# stamp shown in the history command output.
# The optional three formats: "mm/dd/yyyy"|"dd.mm.yyyy"|"yyyy-mm-dd"
# HIST_STAMPS="mm/dd/yyyy"

# Would you like to use another custom folder than $ZSH/custom?
# ZSH_CUSTOM=/path/to/new-custom-folder

# Which plugins would you like to load? (plugins can be found in ~/.oh-my-zsh/plugins/*)
# Custom plugins may be added to ~/.oh-my-zsh/custom/plugins/
# Example format: plugins=(rails git textmate ruby lighthouse)
# Add wisely, as too many plugins slow down shell startup.
# plugins=(aws brew colorize docker docker-compose cake git github gitignore go iwhois sublime osx git-flow git-extras git-prompt npm osx pip pyenv python screen ssh-agent sudo vagrant virtualenv colored-man-pages node theme web-search battery sublime)
#iplugins=(aws brew colorize docker docker-compose cake git go iwhois osx osx pip pyenv python screen ssh-agent sudo vagrant virtualenv colored-man-pages theme web-search battery)
# Taken out zsh-autosuggestions
#plugins=(fly cf bosh colorize docker docker-compose git github gitignore git-flow git-extras git-prompt npm pip pyenv python ssh-agent sudo vagrant virtualenv colored-man-pages node theme web-search)
plugins=(fly cf bosh colorize docker docker-compose git github gitignore git-flow git-extras git-prompt npm pip pyenv python sudo vagrant virtualenv colored-man-pages node theme web-search)

# User configuration

#export GOROOT="/usr/local/opt/go"
export GOPATH="/Users/redwards/go-workspace"
export PATH="$GOROOT/bin:$GOPATH/bin:/usr/local:/usr/local/bin:/usr/bin:/bin:/usr/sbin:/usr/local/sbin:$PATH:/sbin:/opt/X11/bin:~/bin:/Users/redwards/bin:/Users/redwards/bin/terraform"
export MANPATH="/usr/local/man:$MANPATH"

source $ZSH/oh-my-zsh.sh

export JAVA_HOME=$(/usr/libexec/java_home)

# You may need to manually set your language environment
# export LANG=en_US.UTF-8

# Preferred editor for local and remote sessions
# if [[ -n $SSH_CONNECTION ]]; then
#   export EDITOR='vim'
# else
#   export EDITOR='mvim'
# fi

# Compilation flags
# export ARCHFLAGS="-arch x86_64"

# ssh
# export SSH_KEY_PATH="~/.ssh/dsa_id"

# Set personal aliases, overriding those provided by oh-my-zsh libs,
# plugins, and themes. Aliases can be placed here, though oh-my-zsh
# users are encouraged to define aliases within the ZSH_CUSTOM folder.
# For a full list of active aliases, run `alias`.
#
# Example aliases
# alias zshconfig="mate ~/.zshrc"
# alias ohmyzsh="mate ~/.oh-my-zsh"

# Map delete key (fn+backspace) on OS X correctly:
bindkey "^[[3~" delete-char

# History management
export HISTSIZE=25000
export HISTFILE=~/.zsh_history
export SAVEHIST=10000
#setopt SHARE_HISTORY
setopt HIST_IGNORE_ALL_DUPS
setopt HIST_IGNORE_SPACE
setopt HIST_REDUCE_BLANKS
setopt HIST_VERIFY

# =======================
# Environment and Aliases
# =======================

# If a command takes longer than 15 seconds, print its duration
export REPORTTIME=15
# Meh, shit happens:
alias 'cd..=cd ..'
# Common shortcuts
alias ll='ls -lrta'
alias l='ls -CF'

if command -v ggrep >/dev/null 2>&1; then
  alias grep="ggrep --color=auto"
fi

alias cat='ccat'

# For Git
alias 'gk=z gitk --all'
alias 'gs=git status' # (NB overriding GhostScript)
alias 'gd=git diff'
alias 'gg=z git gui'
alias 'git-stashpullpop=git stash && git pull --rebase && git stash pop'
alias 'gl=git log --graph --abbrev-commit --pretty=oneline --decorate'

# For convenience
alias 'mkdir=mkdir -p'
alias 'dmesg=dmesg --ctime'
alias 'df=df --exclude-type=tmpfs'
alias 'dus=du -msc * .*(N) | sort -n'
alias 'dus.=du -msc .* | sort -n'
alias 'fcs=(for i in * .*(N); do echo $(find $i -type f | wc -l) "\t$i"; done) | sort -n'
alias 'fcs.=(for i in .*; do echo $(find $i -type f | wc -l) "\t$i"; done) | sort -n'
alias 'last=last -a'
alias 'zap=clear; echo -en "\e[3J"'
alias 'rmedir=rmdir -v **/*(/^F)'
alias 'xmlindent=xmlindent -t -f -nbe'

# Log file viewing
lastlogdir=logs
alias taillast='tail -f $lastlogdir/*(om[1])'
alias catlast='< $lastlogdir/*(om[1])'
alias lesslast='less $lastlogdir/*(om[1])'

# A few nice settings
for option (
		noautomenu 	# don't select stuff automatically when tabbing if there are options
		auto_cd 	# Auto CD (i.e. can type '..' to change to parent directory, or 'bin' to change to ./bin)
		extendedglob 	# Expanded globbing (i.e. allow 'ls -d ^*.jpg' to show non-jpg files)
		noclobber 	# Require '>!' instead of '>' to overwrite a file
		correct		# Correct common errors
	) setopt $option

# Date on right-side including return code [0][09:30:00]
#RPROMPT=[%?]%{$fg_bold[grey]%}[%D{%H:%M:%S}]%{$reset_color%}

# frontend for generic colouriser grcat(1)
if [[ -x `which grc` ]]; then
  alias colourify='grc -es --colour=auto'
  alias configure='colourify ./configure'
  alias diff='colourify diff'
  alias wdiff='colourify wdiff'
  alias make='colourify make'
  alias gcc='colourify gcc'
  alias g++='colourify g++'
  alias as='colourify as'
  alias gas='colourify gas'
  alias ld='colourify ld'
  alias netstat='colourify netstat'
  alias ping='colourify ping'
  alias traceroute='colourify /usr/sbin/traceroute'
  alias curl='colourify curl'
  alias last='grc last'
  alias dig='colourify dig'
  alias mount='colourify mount'
  alias ifconfig='colourify ifconfig'
fi

#alias colourify="grc -es --colour=auto"
#alias configure='colourify ./configure'

# Python virtualenv setup and pip
# pip should only run if there is a virtualenv currently activated
#export PIP_REQUIRE_VIRTUALENV=true
# cache pip-installed packages to avoid re-downloading
export PIP_DOWNLOAD_CACHE=$HOME/.pip/cache
# To allow the installation of pip packages globally
# an exmaple is gpip install --upgrade --no-use-wheel pip setuptools virtualenv
#gpip(){
#	   PIP_REQUIRE_VIRTUALENV="" pip "$@"
#}

export CF_COLOR=true

# ==========================
# Cloud Access Env Variables
# ==========================
# Check if cloud file exists:
if [[ -f $HOME/.cloud_credentials ]]; then
	source $HOME/.cloud_credentials
fi
# Load local system stuff (local PATH, aliases etc)
if [[ -f $HOME/.zsh_local ]]; then
	source $HOME/.zsh_local
fi

# ==========================
# iTerm Magic
# ==========================
#source ~/.iterm2_shell_integration.`basename $SHELL`

#function iterm2_print_user_vars() {
  #iterm2_set_user_var gitBranch $((git branch 2> /dev/null) | grep \* | cut -c3-)
  #iterm2_set_user_var gitRepo $((git remote show origin 2> /dev/null) | grep "Fetch URL:" | cut -c14-)
#}

#test -e "${HOME}/.iterm2_shell_integration.zsh" && source "${HOME}/.iterm2_shell_integration.zsh"

# The next line updates PATH for the Google Cloud SDK.
if [ -f /Users/redwards/Downloads/google-cloud-sdk/path.zsh.inc ]; then
  source '/Users/redwards/Downloads/google-cloud-sdk/path.zsh.inc'
fi

# The next line enables shell command completion for gcloud.
if [ -f /Users/redwards/Downloads/google-cloud-sdk/completion.zsh.inc ]; then
  source '/Users/redwards/Downloads/google-cloud-sdk/completion.zsh.inc'
fi

# ==========================
# CF CLI
# ==========================
CF_COLOR=true

# Work out logic to understand what he current ln is pointing to!
CF_HOME="~/.cf/"


#alias pws="ln -sfn "~/.cf/pws/config.json" "~/.cf/config.json"; CF_TAR=PWS"
#alias pez="ln -sfn "~/.cf/pez/config.json" "~/.cf/config.json"; CF_TAR=HaaS"
#alias haas="ln -sfn "~/.cf/pez/config.json" "~/.cf/config.json"; CF_TAR=HaaS"

#alias pws="export CF_HOME=~/.cf/pws/; CF_TAR=PWS"
#alias pez="export CF_HOME=~/.cf/PEZ/; CF_TAR=HaaS"
#alias haas="export CF_HOME=~/.cf/PEZ/; CF_TAR=HaaS"

# added by https://github.com/EngineerBetter/cdgo-cli
#function cdgo { cd $(cdgo-cli -needle="$@") ; }
#function cdwork { cd $(cdgo-cli -haystackType=work -needle="$@") ; }

# fortune | cowsay

export PATH=/Users/redwards/Downloads/google-cloud-sdk/bin:/usr/local/opt/pyenv/shims:/usr/local/opt/pyenv/bin:/bin:/Users/redwards/go-workspace/bin:/usr/local:/usr/local/bin:/usr/bin:/bin:/usr/sbin:/usr/local/sbin:/usr/local/bin:/usr/bin:/bin:/usr/sbin:/sbin:/sbin:/opt/X11/bin:~/bin:/Users/redwards/bin:/Users/redwards/bin/terraform:/Users/redwards/.vimpkg/bin

export BOSH_CLIENT=admin
export BOSH_CLIENT_SECRET=`bosh int ~/creds/gcp-lab-bosh.yml --path /admin_password`

